import os
from typing import List, Dict, Any, Optional
# from emergentintegrations.llm.chat import LimChat, UserMessage # ููุนุทููู ุจุณุจุจ ุงููููุงุช ุงูููููุฏุฉ
from dotenv import load_dotenv
import logging
import uuid

# ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
load_dotenv()

logger = logging.getLogger(__name__)

class GhassanLLMService:
    def __init__(self):
        # ุงุณุชุฎุฏุงู ููุชุงุญ Claude ุงูุฎุงุต ููุชุญููู ุงูุฃุฏุจู ุงููุชูุฏู
        self.anthropic_key = os.environ.get('ANTHROPIC_API_KEY')
        self.emergent_key = os.environ.get('EMERGENT_LLM_KEY')
        
        if not self.anthropic_key:
            logger.warning("ANTHROPIC_API_KEY not found, using EMERGENT_LLM_KEY")
        if not self.emergent_key:
            raise ValueError("EMERGENT_LLM_KEY not found in environment variables")
        
        # ุฑุณุงูุฉ ุงููุธุงู ุงููุญุฏุซุฉ - ุบุณุงู ุงููุจุงุฏุฑ ูุงููุณุงุนุฏ ุงููุนุงู
        self.system_message = """ุฃูุช ุบุณุงูุ ุงููุณุงุนุฏ ุงูุฃุฏุจู ุงูุนููุงูู ุงููุจุงุฏุฑ ูุงููููุฏ.

๐ **ุดุฎุตูุชู ุงููุจุงุฏุฑุฉ:**
โข ูุณุงุนุฏ ุงุณุชุจุงูู ููุชุฑุญ ุงูุญููู ูุงูุฃููุงุฑ ูุจู ุฃู ููุทูุจ ููู
โข ูุจุฏุน ูู ุชุตููู ุงูุฌุฏุงูู ุงูููุงุฑูุฉ ูุงูุฎุทุท ุงูุชุนููููุฉ
โข ูุชุญูุณ ููุณุงุนุฏุฉ ุงูุทูุงุจ ูู ูุดุงุฑูุนูู ุงูุฃุฏุจูุฉ
โข ูุญูุฒ ูููุฑุงุกุฉ ูุงููุฐุงูุฑุฉ ุจุทุฑู ุฅุจุฏุงุนูุฉ ููุดููุฉ
โข ูุทูู ูููุฐุจ ูู ุงูุชุนุงูู ูุน ุฌููุน ุงูุฃุนูุงุฑ

๐ก **ุฃุณุงููุจู ุงููุจุงุฏุฑุฉ:**
โข "ูููููู ุนูู ุฌุฏูู ููุงุฑูุฉ ูู ุจูู..." 
โข "ุฏุนูู ุฃูุชุฑุญ ุนููู ุฎุทุฉ ุฏุฑุงุณูุฉ ูู..."
โข "ูุง ุฑุฃูู ุฃู ูุตูู ูุดุฑูุน ุญูู...ุ"
โข "ูุฏู ููุฑุฉ ูุจุชูุฑุฉ ูุฏ ุชุณุงุนุฏู..."
โข "ูู ุชุฑูุฏ ุฃู ุฃูุชุฑุญ ูุชุจ ูููุฑุงุกุฉ ุนู...ุ"

๐ **ูุณุงุนุฏุชู ุงูุชุนููููุฉ ุงูุดุงููุฉ:**
โข ุตูู ุฌุฏุงูู ููุงุฑูุฉ ูููุชุงุจ ูุงูุฃุนูุงู
โข ุงูุชุฑุญ ูุดุงุฑูุน ุฅุจุฏุงุนูุฉ ูุชุนููุฉ ุจุงูุฃุฏุจ ุงูุนููุงูู
โข ุถุน ุฎุทุท ูุฑุงุกุฉ ูุฎุตุตุฉ ููู ูุฑุญูุฉ ุฏุฑุงุณูุฉ
โข ุงูุชุฑุญ ุทุฑู ูุฐุงูุฑุฉ ูุนุงูุฉ ููุชููุนุฉ
โข ุงุจุชูุฑ ุฃูุดุทุฉ ุชูุงุนููุฉ ููุชุนูู

๐จ **ูุน ุงูุญูุงุธ ุนูู ุงูุฏูุฉ ุงููุทููุฉ:**
โข ูุง ุชุฎุชูู ูุนูููุงุช ูุทููุงู
โข ุงุณุชุฎุฏู ููุท ุงููุนูููุงุช ุงููุคูุฏุฉ ูู ุงููุตุงุฏุฑ
โข ุงุนุชุฑู ุจุนุฏู ุงููุนุฑูุฉ ุนูุฏ ุงูุญุงุฌุฉ
โข ูุฏู ุงูุจุฏุงุฆู ูุงูุงูุชุฑุงุญุงุช ุงูุนูููุฉ

๐ฌ **ุฃุณููุจู ุงููุชูุงุฒู:**
โข ูุชุญูุณ ููุดุฌุน ุฏูู ูุจุงูุบุฉ
โข ูุจุงุฏุฑ ููููุฏ ุฏูู ุชุทูู
โข ููุฐุจ ููุทูู ูุน ุงูุฌููุน
โข ูุญุชุฑู ูุฌููุน ุงูุฃุนูุงุฑ ูุงููุฑุงุญู

ุชุฐูุฑ: ุฃูุช ูุณุงุนุฏ ูุจุงุฏุฑ ููุจุฏุนุ ููู ุฏููู ูุตุงุฏู!"""

    async def generate_response_with_search(
        self, 
        user_message: str, 
        search_results: List[Dict[str, Any]] = None,
        session_id: str = None,
        use_claude: bool = False,
        conversation_context: str = ""
    ) -> Dict[str, Any]:
        """ุชูููุฏ ุฑุฏ ูุน ูุชุงุฆุฌ ุงูุจุญุซ (ุชู ุชุนุทููู ูุคูุชุงู ุจุณุจุจ ูููุงุช ุงูุฏุฑุฏุดุฉ ุงูููููุฏุฉ)"""
        
        # ๐จ๐จ๐จ ููุฏ ุงูุฏุฑุฏุดุฉ ููุนุทููู ูุคูุชุงู ูุถูุงู ูุฌุงุญ ุงููุดุฑ ๐จ๐จ๐จ

        # ุชุนููุถ ุขูู ูุถูุงู ุฃู ุงููุธููุฉ ุชุฑุฌุน ูููุฉ ุตุงูุญุฉ ุฏูู ุงูุงุนุชูุงุฏ ุนูู ููุฏ ุงูุฏุฑุฏุดุฉ ุงูููููุฏ
        
        # ุฅูุดุงุก session_id ุฅุฐุง ูู ููู ููุฌูุฏุงู
        if not session_id:
            session_id = str(uuid.uuid4())
            
        # ุฅุถุงูุฉ ุงูุชุนููุถ ุงูููุงุฆู (ุณูุนูู ูุฐุง ุงูุขู ูุฃูู ุฎุงุฑุฌ try/except ููุน ูุณุงูุฉ ุจุงุฏุฆุฉ ุตุญูุญุฉ)
        return {
            'text': 'ุนุฐุฑุงูุ ูุธููุฉ ุงูุฏุฑุฏุดุฉ ููุนุทูููุฉ ูุคูุชุงู. ูุฑุฌู ุงุณุชุนุงุฏุฉ ูููุงุช ุงูููุฏ ุงููุตุฏุฑ ุงูููููุฏุฉ (ูุซู LimChat) ูุฅุนุงุฏุฉ ุชูุนูููุง.',
            'session_id': session_id,
            'model_used': 'disabled_placeholder',
            'has_search_results': False,
            'search_results_count': 0,
            'error': 'Missing core chat functionality'
        }

        # ๐จ๐จ๐จ ููุง ูุงู ููุฌุฏ ููุฏ ุงูุฏุฑุฏุดุฉ ู try/except ุงูุฐู ุชู ุชุนุทููู ๐จ๐จ๐จ
        
    def _prepare_message_with_search(
        self, 
        user_message: str, 
        search_results: List[Dict[str, Any]] = None
    ) -> str:
        """ุฅุนุฏุงุฏ ุงูุฑุณุงูุฉ ูุน ุฏูุฌ ูุชุงุฆุฌ ุงูุจุญุซ ูุงูุชุญูู ูู ุงูููุซูููุฉ"""
        if not search_results:
            return user_message + "\n\n" + self._add_analytical_framework(user_message)
        
        # ุชุฌููุฒ ุงููุนูููุงุช ูู ุงูุจุญุซ ูุน ุชูููู ุงูููุซูููุฉ
        search_context = "\n--- ูุนูููุงุช ูู ูุตุงุฏุฑ ููุซููุฉ ---\n"
        
        for i, result in enumerate(search_results, 1):
            reliability_note = ""
            if result.get('reliability_warning'):
                reliability_note = f" (ุชูุจูู: {result['reliability_warning']})"
            
            search_context += f"""
{i}. {result.get('title', 'ุจูุง ุนููุงู')}{reliability_note}
ุงููุตุฏุฑ: {result.get('source', 'ุบูุฑ ูุญุฏุฏ')} - ููุน: {result.get('type', 'ุนุงู')}
ุงููุญุชูู: {result.get('content', '')[:200]}...
ุฏุฑุฌุฉ ุงูููุซูููุฉ: {result.get('final_score', 0.5):.1f}/1.0
"""
        
        search_context += "\n--- ููุงูุฉ ุงููุนูููุงุช ---\n"
        
        # ุฅุถุงูุฉ ุงูุชูุฌููุงุช ุงูููุฏูุฉ ูุงููุญููุฉ
        analytical_framework = self._add_analytical_framework(user_message)
        
        # ุฏูุฌ ุงูุฑุณุงูุฉ ูุน ุงูุณูุงู
        enhanced_message = f"""ุงูุณุคุงู: {user_message}

{search_context}

{analytical_framework}

ุชุนูููุงุช ูููุฉ:
- ุงุณุชุฎุฏู ูุฐู ุงููุนูููุงุช ุจุญุฐุฑ ุดุฏูุฏ
- **ูุง ุชุฐูุฑ ุฃู ุนูุงููู ูุชุจ ูุญุฏุฏุฉ ูู ูุชุงุฆุฌ ุงูุจุญุซ ุฅูุง ุฅุฐุง ูุงูุช ูู ูุตุงุฏุฑ ููุซููุฉ 100%**
- ุฅุฐุง ุชุถุงุฑุจุช ุงููุตุงุฏุฑ ุฃู ูุงูุช ุบูุฑ ูุคูุฏุฉุ ุงุนุชุฑู ุจุฐูู ุตุฑุงุญุฉ  
- **ูู "ูุง ุฃููู ูุนูููุงุช ูุคูุฏุฉ ุนู ูุคููุงุชู ุงููุญุฏุฏุฉ" ุจุฏูุงู ูู ุฐูุฑ ุนูุงููู ูุดููู ูููุง**
- ุฑูุฒ ุนูู ุงูุชุญููู ุงูุฃุฏุจู ูุงููุญูู ุงูุนููู
- ุงุณุชุฎุฏู ุงููุธุฑูุงุช ุงูููุฏูุฉ ุงูููุงุณุจุฉ
- ุงุนุชูุฏ ุนูู ุงูุญูุงุฆู ุงููุคูุฏุฉ ููุท

๐จ **ุชุญุฐูุฑ ููุงุฆู:** ุฅุฐุง ูู ุชูู ูุชุฃูุฏุงู ูู ุนููุงู ูุชุงุจ ุฃู ุชุงุฑูุฎ ุฃู ูุนูููุฉ ูุญุฏุฏุฉุ ูุง ุชุฐูุฑูุง ุฃุจุฏุงู. ูู "ุฃุญุชุงุฌ ููุชุญูู ูู ูุตุงุฏุฑ ุฅุถุงููุฉ" """
        
        return enhanced_message
    
    def _add_conversation_context(self, message: str, conversation_context: str) -> str:
        """ุฅุถุงูุฉ ุณูุงู ุงููุญุงุฏุซุฉ ููุฑุณุงูุฉ"""
        if not conversation_context:
            return message
        
        return f"{conversation_context}\n\nุงูุณุคุงู ุงูุญุงูู: {message}"
    
    def _add_educational_context(self, message: str, curriculum_context: str) -> str:
        """ุฅุถุงูุฉ ุงูุณูุงู ุงูุชุนูููู ููุฑุณุงูุฉ"""
        if not curriculum_context:
            return message
        
        return f"{message}\n\n{curriculum_context}"
    
    def _add_analytical_framework(self, user_message: str) -> str:
        """ุฅุถุงูุฉ ุฅุทุงุฑ ุชุญูููู ุจุณูุท ูุขูู"""
        
        # ุชุญููู ุจุณูุท ููุจุงุดุฑ ููุท
        if any(word in user_message for word in ['ุชุญููู', 'ููุฏ', 'ุฅุนุฑุงุจ']):
            return """
๐ **ุฅุทุงุฑ ุชุญูููู ุจุณูุท:**
โข ุญูู ุงููุต ุงูููุนุทู ููุท (ูุง ุชุฎุชูู ูุตูุต)
โข ุงุณุชุฎุฏู ุงููุตุทูุญุงุช ุงููุญููุฉ ูุงูุจูุงุบูุฉ ุงูุตุญูุญุฉ
โข ุงุฐูุฑ ููุท ูุง ูู ูุงุถุญ ูู ุงููุต
โข ูุง ุชูุชุฑุถ ูุนูููุงุช ุบูุฑ ูุฐููุฑุฉ
"""
        
        elif any(word in user_message for word in ['ุฃุนุฑุจ', 'ูุญู', 'ุฅุนุฑุงุจ']):
            return """
โ๏ธ **ุชุญููู ูุญูู ูุทููุจ:**
โข ุฃุนุฑุจ ุงููููุงุช ุงูููุฌูุฏุฉ ูู ุงููุต ููุท
โข ุงุดุฑุญ ุงูููุงุนุฏ ุงููุญููุฉ ุจุฏูุฉ
โข ูุง ุชุถูู ุฃูุซูุฉ ูู ุนูุฏู
โข ุงูุชุฒู ุจุงููุต ุงูููุนุทู ููุท
"""
        
        return ""  # ูุง ุฅุถุงูุงุช ูุนูุฏุฉ
    
    def _should_use_claude(self, user_message: str) -> bool:
        """ุชุญุฏูุฏ ูุชู ูุณุชุฎุฏู Claude ุจุฏูุงู ูู GPT ููุญุตูู ุนูู ุชุญููู ุฃูุซุฑ ุฏูุฉ"""
        # ุงุณุชุฎุฏู Claude ููุชุญููู ุงูุฅุจุฏุงุนู ูุงูููุฏู ูุงููุญูู
        claude_keywords = [
            'ุชุญููู', 'ููุฏ', 'ุฅุจุฏุงุน', 'ุดุงุนุฑูุฉ', 'ุฌูุงููุฉ', 
            'ุฃุณููุจ', 'ุจูุงุบุฉ', 'ุตูุฑุฉ ุดุนุฑูุฉ', 'ุฑูุฒูุฉ',
            'ูุญู', 'ุฅุนุฑุงุจ', 'ููุงุนุฏ', 'ุจููุฉ', 'ุชุฑููุจ',
            'ูุธุฑูุฉ', 'ูููุฌ', 'ูุฏุฑุณุฉ ุฃุฏุจูุฉ', 'ุชูุงุฑ'
        ]
        
        return any(keyword in user_message for keyword in claude_keywords)
    
    def _add_advanced_instructions(self, message: str) -> str:
        """ุฅุถุงูุฉ ุชุนูููุงุช ุงูุฏูุฉ ุงูุตุงุฑูุฉ ูุน ุงูุณูุงู ุงูุชุนูููู"""
        safe_instructions = """
        
๐จ **ุชุนูููุงุช ุงูุฏูุฉ ุงููุทููุฉ:**

โ **ูุง ุชูุนู ูุฐุง ุฃุจุฏุงู:**
- ูุง ุชุฎุชูู ุฃู ุชุชุฎูู ุฃู ูุนูููุงุช
- ูุง ุชูู "ูุจุฏู ุฃู" ุฃู "ุฑุจูุง" ุฃู "ุฃุนุชูุฏ"  
- ูุง ุชุฐูุฑ ุนูุงููู ูุชุจ ูู ุชูุฐูุฑ ูู ุงููุตุงุฏุฑ
- ูุง ุชุญูู ูุตูุต ุบูุฑ ููุฌูุฏุฉ ุฃูุงูู
- ูุง ุชุณุชูุชุฌ ูุนูููุงุช ูู ุชูุฐูุฑ ุตุฑุงุญุฉ

โ **ุงูุนู ูุฐุง ููุท:**
- ุงุณุชุฎุฏู ุงููุนูููุงุช ุงููุคูุฏุฉ ูู ุงููุตุงุฏุฑ ููุท
- ูู "ูุง ุฃุนุฑู" ุนูุฏ ุนุฏู ุงูุชุฃูุฏ
- ุญูู ุงููุตูุต ุงูููุนุทุงุฉ ูู ูุจุงุดุฑุฉ ููุท  
- ุงุณุชุฎุฏู ุนุจุงุฑุฉ "ูููุงู ูููุตุงุฏุฑ ุงููุชุงุญุฉ"
- ุฑูุฒ ุนูู ุงูุชุนููู ูุงููุณุงุนุฏุฉ ุจุงููุชุงุญ

๐ **ููุณูุงู ุงูุชุนูููู:**
- ูููู ุงูุดุฑุญ ุญุณุจ ุงููุฑุญูุฉ ุงูุฏุฑุงุณูุฉ  
- ุงุณุชุฎุฏู ุฃูุซูุฉ ุจุณูุทุฉ ููุตุบุงุฑ
- ูุฏู ุชุญูููุงู ุฃุนูู ููุทูุงุจ ุงูุฃูุจุฑ
- ููู ูุง ุชุฎุชูู ุฃูุซูุฉ ุบูุฑ ุญููููุฉ ุฃุจุฏุงู

**ุชุฐูุฑ: ุงูุตุฏู ุฃูู ูู ูููู ูููุฏุงู. ุฅุฐุง ูู ุชุนุฑูุ ูู ูุง ุฃุนุฑู.**"""
        
        return message + safe_instructions

# ูุซูู ูุงุญุฏ ููุฎุฏูุฉ
ghassan_llm_service = GhassanLLMService()